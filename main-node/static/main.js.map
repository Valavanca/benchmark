{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/charts/heat-map-reg/heat-map-reg.component.css","webpack:///./src/app/components/charts/heat-map-reg/heat-map-reg.component.html","webpack:///./src/app/components/charts/heat-map-reg/heat-map-reg.component.ts","webpack:///./src/app/components/charts/heat-map/heat-map.component.html","webpack:///./src/app/components/charts/heat-map/heat-map.component.scss","webpack:///./src/app/components/charts/heat-map/heat-map.component.ts","webpack:///./src/app/components/info-board/info-board.component.html","webpack:///./src/app/components/info-board/info-board.component.scss","webpack:///./src/app/components/info-board/info-board.component.ts","webpack:///./src/app/components/task-list/task-list.component.html","webpack:///./src/app/components/task-list/task-list.component.scss","webpack:///./src/app/components/task-list/task-list.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/services/main.socket.service.ts","webpack:///./src/app/core/services/rest.service.ts","webpack:///./src/app/core/services/ws.socket.service.ts","webpack:///./src/app/data/client-enums.ts","webpack:///./src/app/data/taskData.model.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n  <div class=\\\"wrapper\\\">\\n    <h1>\\n      [logo] BRISE 2.0\\n    </h1>\\n    <h4>Benchmark Reduction Via Adaptive Instance Selection</h4>\\n    <mat-tab-group>\\n      \\n      <!-- TAB 1 -->\\n      <mat-tab label=\\\"Heat map\\\">\\n        <hm-2></hm-2>\\n        <hm-reg></hm-reg>\\n      </mat-tab>\\n\\n      <!-- TAB 2 -->\\n      <mat-tab label=\\\"Info\\\">\\n        <info-board></info-board>  \\n      </mat-tab>\\n\\n      <!-- Tab 3 -->\\n      <mat-tab label=\\\"Tasks\\\">\\n        <app-task-list> </app-task-list>\\n      </mat-tab>\\n\\n    </mat-tab-group>\\n  </div>\\n</div>\\n\\n\\n\"","module.exports = \".wrapper {\\n  max-width: 1200px;\\n  margin: 10px auto; }\\n\\nh1 {\\n  color: #673AB7; }\\n\\nh4 {\\n  color: #FF4081; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor() { }\n  public ngOnInit() { }\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\n\n// Modules\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n// Intro\nimport { AppComponent } from './app.component';\n/* Charts */ \nimport { HeatMapComponent } from './components/charts/heat-map/heat-map.component';\nimport { HeatMapRegComponent } from './components/charts/heat-map-reg/heat-map-reg.component';\n\nimport { TaskListComponent } from './components/task-list/task-list.component';\nimport { InfoBoardComponent } from './components/info-board/info-board.component';\n\n\n@NgModule({ \n  declarations: [\n    AppComponent,\n    TaskListComponent,\n    HeatMapComponent,\n    HeatMapComponent,\n    HeatMapRegComponent,\n    InfoBoardComponent\n  ],\n  imports: [\n    BrowserModule, HttpModule,\n    CoreModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<mat-card *ngIf=y&&x>\\n    <div class=\\\"select-box\\\">\\n        <!-- select color -->\\n        <mat-form-field>\\n            <mat-select [(value)]=\\\"theme.color\\\" (selectionChange)=\\\"regrRender()\\\" placeholder=\\\"Color\\\">\\n                <mat-option *ngFor=\\\"let col of colors\\\" [value]=\\\"col\\\">\\n                    {{col}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        <!-- select type -->\\n        <mat-form-field>\\n            <mat-select [(value)]=\\\"theme.type\\\" (selectionChange)=\\\"regrRender()\\\" placeholder=\\\"Type\\\">\\n                <mat-option *ngFor=\\\"let t of type\\\" [value]=\\\"t\\\">\\n                    {{t}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        <!-- select smooth -->\\n        <mat-form-field>\\n            <mat-select [(value)]=\\\"theme.smooth\\\" (selectionChange)=\\\"regrRender()\\\" placeholder=\\\"Smooth\\\">\\n                <mat-option *ngFor=\\\"let s of smooth\\\" [value]=\\\"s\\\">\\n                    {{s}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n    </div>\\n    <div #reg></div>\\n</mat-card>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n// Service\nimport { MainSocketService } from '../../../core/services/main.socket.service';\n\nimport { MainEvent } from '../../../data/client-enums';\n// Plot\nimport { PlotType as type } from '../../../data/client-enums';\nimport { Color as colors } from '../../../data/client-enums';\nimport { Smooth as smooth } from '../../../data/client-enums';\n\n@Component({\n  selector: 'hm-reg',\n  templateUrl: './heat-map-reg.component.html',\n  styleUrls: ['./heat-map-reg.component.css']\n})\nexport class HeatMapRegComponent implements OnInit {\n\n  // Variables\n  prediction = new Map()\n  globalConfig: object\n  taskConfig: object\n  solution = { 'x': undefined, 'y': undefined }\n  measured = {'x': [], 'y': []}\n\n  @ViewChild('reg') reg: ElementRef;\n\n  // Rendering axises\n  y: Array<number>\n  x: Array<number>\n\n  // Default theme\n  theme = {\n    type: type[0],\n    color: colors[0],\n    smooth: smooth[0]\n  }\n  public type = type\n  public colors = colors\n  public smooth = smooth\n\n  constructor(private ioMain: MainSocketService) { }\n\n  ngOnInit() {\n    this.initMainConnection();\n  }\n\n  // Rendering\n  regrRender(): void {\n    console.log(\"Reg render>\", this.prediction)\n    const regresion = this.reg.nativeElement\n    const data = [\n      {\n        // z: [[1, 20, 30], [20, 1, 60], [30, 60, 1]],\n        z: this.zParser(this.prediction),\n        x: this.x.map(String),\n        y: this.y.map(String),\n        type: this.theme.type,\n        colorscale: this.theme.color,\n        zsmooth: this.theme.smooth\n      },\n      {\n        type: 'scatter',\n        mode: 'markers',\n        marker: { color: 'Gold', size: 12, symbol: 'star-open-dot' },\n        x: this.solution.x,\n        y: this.solution.y\n      },\n      {\n        type: 'scatter',\n        mode: 'markers',\n        marker: { color: 'grey', size: 9, symbol: 'cross' },\n        x: this.measured.x,\n        y: this.measured.y\n      }\n    ];\n\n    var layout = {\n      title: 'Regresion',\n      xaxis: { title: \"Frequency\",\n        type: 'category',\n        autorange: true,\n        range: [Math.min(...this.x), Math.max(...this.x)] \n      },\n      yaxis: { title: \"Threads\",\n        type: 'category',\n        autorange: true,\n        range: [Math.min(...this.y), Math.max(...this.y)]  }\n    };\n\n    Plotly.newPlot(regresion, data, layout);\n  }\n  zParser(data: Map<String, Number>): Array<Array<Number>> {\n    var z = []\n    this.y.forEach(y => { // y - threads\n      var row = []\n      this.x.forEach(x => { // x - frequency\n        row.push(data.get(String([x, y])))\n      });\n      z.push(row)\n    });\n    return z\n  }\n\n  // Init conection\n  private initMainConnection(): void {\n\n    this.ioMain.onEmptyEvent(MainEvent.CONNECT)\n      .subscribe(() => {\n        console.log(' reg.main: reg connected');\n      });\n    this.ioMain.onEmptyEvent(MainEvent.DISCONNECT)\n      .subscribe(() => {\n        console.log(' reg.main: reg disconnected');\n      });\n    // ---- Main events\n\n    this.ioMain.onEvent(MainEvent.BEST)\n      .subscribe((obj: any) => {\n        console.log(' Socket: BEST', obj);\n        this.solution.x = obj['best point']['configuration'][0]\n        this.solution.y = obj['best point']['configuration'][1]\n\n        this.measured.x = obj['best point']['measured points'].map(arr => arr[0])\n        this.measured.y = obj['best point']['measured points'].map(arr => arr[1])\n        console.log(\"Measured\", this.measured.x, this.measured.y)\n        this.regrRender()\n      });\n\n    this.ioMain.onEvent(MainEvent.MAIN_CONF)\n      .subscribe((obj: any) => {\n        this.globalConfig = obj['global_config']\n        this.taskConfig = obj['task']\n        this.x = obj['task']['DomainDescription']['AllConfigurations'][0] // frequency\n        this.y = obj['task']['DomainDescription']['AllConfigurations'][1] // threads\n      });\n\n    this.ioMain.onEvent(MainEvent.REGRESION)\n      .subscribe((obj: any) => {\n        console.log(' Socket: REGRESION', obj);\n        obj['regression'].map(point => {\n          this.prediction.set(String(point['configuration']), point['prediction'])\n        })\n        this.regrRender()\n      });\n\n  }\n\n}\n","module.exports = \"<mat-card>\\n  <h3>Experiment:</h3>\\n  <div class=\\\"button-row\\\">\\n    <button mat-button (click)=\\\"startMain()\\\" [disabled]=\\\"isRuning\\\" color=\\\"primary\\\">Start</button>\\n    <button mat-button (click)=\\\"stopMain()\\\" [disabled]=\\\"!isRuning\\\" color=\\\"warn\\\">Stop</button>\\n    <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=isRuning></mat-progress-bar>\\n  </div>\\n\\n  <div class=\\\"select-box\\\" *ngIf=y&&x>\\n    <!-- select color -->\\n    <mat-form-field>\\n      <mat-select [(value)]=\\\"theme.color\\\" (selectionChange)=\\\"render()\\\" placeholder=\\\"Color\\\">\\n        <mat-option *ngFor=\\\"let col of colors\\\" [value]=\\\"col\\\">\\n          {{col}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <!-- select type -->\\n    <mat-form-field>\\n      <mat-select [(value)]=\\\"theme.type\\\" (selectionChange)=\\\"render()\\\" placeholder=\\\"Type\\\">\\n        <mat-option *ngFor=\\\"let t of type\\\" [value]=\\\"t\\\">\\n          {{t}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <!-- select smooth -->\\n    <mat-form-field>\\n      <mat-select [(value)]=\\\"theme.smooth\\\" (selectionChange)=\\\"render()\\\" placeholder=\\\"Smooth\\\">\\n        <mat-option *ngFor=\\\"let s of smooth\\\" [value]=\\\"s\\\">\\n          {{s}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-card *ngIf=\\\"solution\\\" class=\\\"chart-solution\\\">\\n      <mat-icon matListIcon>star</mat-icon>\\n      <span>Solution: </span> <h3>{{solution.configuration}}</h3>\\n      <span>Result deviation: </span> <h3>{{(solution.result/default_task.result-1)*100 | number:'2.0-0'}}%</h3>\\n    </mat-card>\\n  </div>\\n  <!-- ================  Heat map  ================ -->\\n  <div #map></div>\\n  <!-- ============================================ -->\\n</mat-card>\\n\\n\\n\\n\\n\"","module.exports = \"h3 {\\n  color: #212121; }\\n\\n.select-box {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: flex-start;\\n  align-items: flex-start;\\n  margin-top: 12px; }\\n\\n.select-box .chart-solution {\\n    display: flex;\\n    margin-left: 20px;\\n    align-items: center;\\n    padding: 15px 20px;\\n    border-left: 3px solid #757575; }\\n\\n.select-box .chart-solution > mat-icon {\\n      color: #757575; }\\n\\n.select-box .chart-solution span {\\n      margin: 0 10px;\\n      color: #212121; }\\n\\n.select-box .chart-solution h3 {\\n      color: #FF4081;\\n      margin: 0 4px; }\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n// Service\n// import { RestService } from '../../services/worker.service';\nimport { WsSocketService } from '../../../core/services/ws.socket.service';\nimport { MainSocketService } from '../../../core/services/main.socket.service';\nimport { RestService as mainREST} from '../../../core/services/rest.service';\n\nimport { Event } from '../../../data/client-enums';\nimport { MainEvent } from '../../../data/client-enums';\n\n// Plot\nimport { PlotType as type } from '../../../data/client-enums';\nimport { Color as colors } from '../../../data/client-enums';\nimport { Smooth as smooth } from '../../../data/client-enums';\nimport { Solution } from '../../../data/taskData.model';\n\n\n\n@Component({\n  selector: 'hm-2',\n  templateUrl: './heat-map.component.html',\n  styleUrls: ['./heat-map.component.scss']\n})\nexport class HeatMapComponent implements OnInit {\n  \n  // The experements results\n  result = new Map()\n\n  // The prediction results from model\n  prediction = new Map()\n\n  // Flag for runing main-node\n  isRuning: boolean = false\n\n  globalConfig: object \n  taskConfig: object\n\n  // Best point \n  solution: Solution\n  // Measured points for the Regresion model from worker-service\n  measPoints: Array<Array<number>> = []\n  default_task = { 'conf': '', 'result': 0}\n\n  // Rendering axises\n  y: Array<number>\n  x: Array<number>\n\n  // Default theme\n  theme = {\n    type: type[0],\n    color: colors[0],\n    smooth: smooth[0]\n  }\n  public type = type\n  public colors = colors\n  public smooth = smooth\n\n  // poiner to DOM element #map\n  @ViewChild('map') map: ElementRef;\n\n  constructor(\n    private mainREST: mainREST, \n    private ioWs: WsSocketService, \n    private ioMain: MainSocketService,\n  ) {  }\n\n  ngOnInit() {\n    this.initWsEvents();\n    this.initMainEvents();\n  }\n\n  zParser(data: Map<String,Number>): Array<Array<Number>> {\n    // Parse the answears in to array of Y rows\n    var z = []\n    this.y.forEach(y => { // y - threads\n      var row = [] \n      this.x.forEach(x => { // x - frequency\n        row.push(data.get(String([x, y])))\n      });\n      z.push(row)\n    });\n    return z\n  }\n  \n  render(): void {\n    const element = this.map.nativeElement\n    const data = [\n      { // defined X and Y axises with data, type and color\n        z: this.zParser(this.result),\n        x: this.x.map(String),\n        y: this.y.map(String),\n        type: this.theme.type,\n        colorscale: this.theme.color,\n        zsmooth: this.theme.smooth\n      }, \n      { // Best point. Solution\n        type: 'scatter',\n        mode: 'markers',\n        marker: { color: 'Gold', size: 16, symbol: 'star-dot' },\n        x: this.solution && [this.solution.configuration[0]],\n        y: this.solution && [this.solution.configuration[1]]\n      },\n      { // Measured points\n        type: 'scatter',\n        mode: 'markers',\n        marker: { color: 'grey', size: 7, symbol: 'cross' },\n        x: this.measPoints.map(arr => arr[0]),\n        y: this.measPoints.map(arr => arr[1]) \n      }\n    ];\n\n    var layout = {\n      title: 'Heat map results',\n      showlegend: false,\n      xaxis: {\n        title: \"Frequency\",\n        type: 'category',\n        autorange: true,\n        range: [Math.min(...this.x), Math.max(...this.x)],\n        showgrid: true\n      },\n      yaxis: {\n        title: \"Threads\",\n        type: 'category',\n        autorange: true,\n        range: [Math.min(...this.y), Math.max(...this.y)],\n        showgrid: true\n      }\n    };\n\n    Plotly.newPlot(element, data, layout);\n  }\n\n\n\n\n  //                              WebSocket\n  // --------------------------   Worker-service\n  private initWsEvents(): void {\n    this.ioWs.initSocket();\n\n    // Fresh updates. Each time +1 task\n    // this.ioConnection = this.io.onResults()\n    //   .subscribe((obj: JSON) => {\n    //     var fresh: Task = new Task(obj)\n\n    //     var r = fresh.hasOwnProperty('meta') && fresh['meta']['result']\n    //     var delta = !!r && [r['threads'], r['frequency'], r['energy']]\n    //     !this.result.includes(delta, -1) && this.result.push(delta);\n    //     // console.log(\"---- Delta\", delta)\n    //   });\n\n    // Observer for stack and all results from workers service\n    // this.ioConnection = this.io.onAllResults()\n    //   .subscribe((obj: any) => {\n    //     console.log(\"onAllResults ::\", JSON.parse(obj))\n    //     var data = JSON.parse(obj)\n    //     this.result = (data.hasOwnProperty('res') && data['res'].length) ? data['res'].map((t) => new Task(t)) : [];\n    //   });\n\n    this.ioWs.onEvent(Event.CONNECT)\n      .subscribe(() => {\n        console.log(' hm2.workerService: connected');\n        this.ioWs.reqForAllRes();\n      });\n    this.ioWs.onEvent(Event.DISCONNECT)\n      .subscribe(() => {\n        console.log(' hm2.workerService: disconnected');\n    });\n  }\n\n  //                              WebSocket\n  // --------------------------   Main-node\n  private initMainEvents(): void {\n\n    this.ioMain.onEmptyEvent(MainEvent.CONNECT)\n      .subscribe(() => {\n        console.log(' hm.main: connected');\n      });\n    this.ioMain.onEmptyEvent(MainEvent.DISCONNECT)\n      .subscribe(() => {\n        console.log(' hm.main: disconnected');\n      });\n\n    // ----                     Main events\n    this.ioMain.onEvent(MainEvent.DEFAULT_CONF)\n      .subscribe((obj: any) => {\n        console.log(' Socket: DEFAULT_task', obj);\n        this.default_task.conf = obj['conf']\n        this.default_task.result = obj['result']\n        this.result.set(String(obj['conf']), obj['result'])\n        this.measPoints.push(obj['conf'])\n        this.render()\n      });\n    this.ioMain.onEvent(MainEvent.BEST)\n      .subscribe((obj: any) => {\n        console.log(' Socket: BEST', obj);\n        this.solution = obj['best point']\n        this.render()\n      });\n\n    this.ioMain.onEvent(MainEvent.INFO)\n      .subscribe((obj: any) => {\n        console.log(' Socket: INFO', obj);\n      });\n\n    this.ioMain.onEvent(MainEvent.MAIN_CONF)\n      .subscribe((obj: any) => {\n        this.globalConfig = obj['global_config']\n        this.taskConfig = obj['task']\n        this.x = obj['task']['DomainDescription']['AllConfigurations'][0] // frequency\n        this.y = obj['task']['DomainDescription']['AllConfigurations'][1] // threads\n        console.log(' Socket: MAIN_CONF', obj);\n      });\n    this.ioMain.onEvent(MainEvent.TASK_RESULT)\n      .subscribe((obj: any) => {\n        this.result.set(String(obj['configuration']), obj['result'])\n        this.measPoints.push(obj['configuration'])\n\n        this.render()\n      });\n  }\n\n  // HTTP: Main-node\n  startMain(): any {\n    if (this.isRuning == false) {\n      this.mainREST.startMain()\n        .subscribe((res) => {\n          console.log('Main start:', res)\n          this.isRuning = true\n        }\n        );\n    }\n  }\n  stopMain(): any {\n    if (this.isRuning == true) {\n      this.mainREST.stopMain()\n        .subscribe((res) => {\n          console.log('Main stop:', res)\n          this.isRuning = false\n        }\n        );\n    }\n  }\n\n}\n","module.exports = \"<mat-accordion>\\n  <!-- Panel 1 -->\\n  <mat-expansion-panel [disabled]=\\\"!news\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Info messages\\n      </mat-panel-title>\\n      <mat-panel-description>\\n         Basic information from the workflow of experiments ({{news ? news.size : '0'}})\\n         <mat-icon \\n          matBadge='news.size' \\n          matBadgeColor=\\\"accent\\\" \\n          matBadgePosition=\\\"above befor\\\">\\n          input\\n          </mat-icon>\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <!-- Logs list  -->\\n    <ng-template matExpansionPanelContent>\\n      <mat-list dense role=\\\"list\\\" *ngIf=news>\\n        <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let info of news\\\">\\n          <mat-icon mat-list-icon>done</mat-icon>\\n          <p mat-line>{{info.message}}</p>\\n          <mat-divider></mat-divider>\\n          <p class=\\\"time\\\" mat-line> {{info.time | date:'shortTime'}} </p>\\n        </mat-list-item>\\n      </mat-list>\\n    </ng-template>\\n  </mat-expansion-panel>\\n\\n  <!-- Panel 2 -->\\n  <mat-expansion-panel [disabled]=\\\"!solution\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Solution \\n      </mat-panel-title>\\n      <mat-panel-description>\\n         A solution that is found by BRISE ({{solution ? 'Done' : 'Please stand by..'}})\\n         <mat-icon>star_rate</mat-icon>\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <ng-template matExpansionPanelContent>\\n      <mat-list class=\\\"solution\\\">\\n        <mat-list-item>\\n          <mat-icon matListIcon>outlined_flag</mat-icon>\\n          <span class=\\\"desc\\\">Configuration: </span> <span>{{solution.configuration}}</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon matListIcon>grade</mat-icon>\\n          <span class=\\\"desc\\\">Result: </span> <span>{{solution.result}}</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon matListIcon>network_check</mat-icon>\\n          <span class=\\\"desc\\\">Deviation result from default: </span> <span>{{100*(solution.result - default_task.result)/default_task.result | number:'2.0-0'}}%</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon matListIcon>blur_on</mat-icon>\\n          <span class=\\\"desc\\\">Measured points: </span> <span>{{solution['measured points'].length}}</span>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <mat-icon matListIcon>sentiment_satisfied_alt</mat-icon>\\n          <span class=\\\"desc\\\">Saved efforts: </span> <span>\\n            {{\\n              (1 - solution['measured points'].length/(taskConfig['DomainDescription']['AllConfigurations'][0].length*taskConfig['DomainDescription']['AllConfigurations'][1].length))*100 |number:'2.0-0'\\n            }}%\\n        </span>\\n        </mat-list-item>\\n      </mat-list>\\n    </ng-template>\\n  </mat-expansion-panel>\\n</mat-accordion>\"","module.exports = \".time {\\n  color: #BDBDBD; }\\n\\n.mat-expansion-panel-header-title,\\n.mat-expansion-panel-header-description {\\n  flex-basis: 0; }\\n\\n.mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center; }\\n\\nmat-panel-title {\\n  color: #512DA8; }\\n\\nmat-panel-description mat-icon {\\n  color: #FF4081; }\\n\\nmat-list-item mat-icon {\\n  color: #757575; }\\n\\n.solution mat-icon {\\n  color: #FF4081; }\\n\\n.solution .desc {\\n  color: rgba(33, 33, 33, 0.54);\\n  font-size: .95em;\\n  vertical-align: middle;\\n  margin-right: 5px; }\\n\\n.solution .desc + span {\\n    font-weight: 400; }\\n\"","import { Component, OnInit } from '@angular/core';\n// Material\nimport { MatSnackBar } from '@angular/material';\n\n// Service\nimport { WsSocketService } from '../../core/services/ws.socket.service';\nimport { MainSocketService } from '../../core/services/main.socket.service';\n\n// Constant\nimport { MainEvent } from '../../data/client-enums';\nimport { Solution } from '../../data/taskData.model';\n\n\n@Component({\n  selector: 'info-board',\n  templateUrl: './info-board.component.html',\n  styleUrls: ['./info-board.component.scss']\n})\nexport class InfoBoardComponent implements OnInit {\n  // Steps for expansion. Material.angular\n  panelOpenState = false;\n\n  // Information log\n  news = new Set()\n  \n  solution: Solution\n  default_task: any\n\n  globalConfig: object\n  taskConfig: object\n\n  constructor(\n    private ioWs: WsSocketService,\n    private ioMain: MainSocketService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.initMainEvents()\n  }\n\n\n  private initMainEvents(): void {\n\n    this.ioMain.onEmptyEvent(MainEvent.CONNECT)\n      .subscribe(() => {\n        console.log(' info.main: connected');\n      });\n    this.ioMain.onEmptyEvent(MainEvent.DISCONNECT)\n      .subscribe(() => {\n        console.log(' info.main: disconnected');\n      });\n\n    // ----                     Main events\n    this.ioMain.onEvent(MainEvent.DEFAULT_CONF)\n      .subscribe((obj: any) => {\n        this.default_task = obj\n        let temp = { 'time': Date.now(), 'message': 'Measured default configuration'}\n        this.snackBar.open(temp['message'], '×', {\n          duration: 3000\n        });\n        this.news.add(temp) \n      });\n    this.ioMain.onEvent(MainEvent.BEST)\n      .subscribe((obj: any) => {\n        this.solution = obj['best point']\n        let temp = { \n          'time': Date.now(), \n          'message': '★★★ The optimum result is found. The best point is reached ★★★'\n        }\n        this.snackBar.open(temp['message'], '×', {\n          duration: 3000\n        });\n        this.news.add(temp)\n      });\n\n    this.ioMain.onEvent(MainEvent.INFO)\n      .subscribe((obj: any) => {\n        console.log(' Socket: INFO', obj);\n        let temp = { 'time': Date.now(), 'message': obj['message'] }\n        this.snackBar.open(temp['message'], '×', {\n          duration: 3000\n        });\n        this.news.add(temp)\n      });\n\n    this.ioMain.onEvent(MainEvent.MAIN_CONF)\n      .subscribe((obj: any) => {\n        this.globalConfig = obj['global_config']\n        this.taskConfig = obj['task']\n        let temp = {\n          'time': Date.now(), \n          'message': 'The main configurations of the experiment are obtained.Let\\'s go!'\n        }\n        this.snackBar.open(temp['message'], '×', {\n          duration: 3000\n        });\n        this.news.add(temp) \n      });\n    this.ioMain.onEvent(MainEvent.TASK_RESULT)\n      .subscribe((obj: any) => {\n        let temp = { \n          'time': Date.now(), \n          'message': 'New results for ' + String(obj['configuration']) \n        }\n        this.snackBar.open(temp['message'], '×', {\n          duration: 3000\n        });\n        this.news.add(temp)\n      });\n    this.ioMain.onEvent(MainEvent.REGRESION)\n      .subscribe((obj: any) => {\n        let temp = { \n          'time': Date.now(), \n          'message': 'Regression obtained. ' + obj['regression'].length + ' predictions' \n        }\n        this.snackBar.open(temp['message'], '×', {\n          duration: 3000\n        });\n        this.news.add(temp)\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"box\\\">\\n  <mat-card class=\\\"stack\\\">                                     <!-- STACK list -->\\n    <mat-card-header>\\n      <h3>Stack {{stack?.length}}</h3>\\n    </mat-card-header> \\n    <mat-card-content>\\n      <mat-list dense role=\\\"list\\\" *ngIf=stack>\\n        <mat-list-item *ngFor=\\\"let task of stack\\\" \\n          (click)=\\\"taskInfo(task.id)\\\" role=\\\"listitem\\\" \\n          [class.selected]=\\\"task.id === this.focus?.id\\\">\\n          <mat-icon matListIcon>folder</mat-icon>\\n          <h3 matLine> {{task.id.substr(0, 5)}} </h3>\\n          <p matLine>\\n            <span> {{task.run.param.frequency}} </span>\\n            <span class=\\\"demo-2\\\"> -- {{task.run.param.threads}} </span>\\n          </p>\\n          <button mat-icon-button (click)=\\\"taskInfo(task.id)\\\">\\n            <mat-icon>info</mat-icon>\\n          </button>\\n        </mat-list-item>\\n      </mat-list>\\n    </mat-card-content>\\n  </mat-card>  <!-- end stack -->\\n\\n  <!-- RESULT list -->\\n  <mat-card class=\\\"result\\\">   \\n    <mat-card-header>\\n      <h3>Result {{result?.length}}</h3>\\n    </mat-card-header> \\n    <mat-card-content>\\n      <mat-list dense role=\\\"list\\\">\\n        <mat-list-item *ngFor=\\\"let item of result\\\" \\n            (click)=\\\"taskInfo(item.id)\\\" \\n            role=\\\"listitem\\\"\\n            [class.selected]=\\\"item.id === this.focus?.id\\\">\\n            <mat-icon matListIcon>folder</mat-icon>\\n            <h3 matLine> {{item.id.substr(0, 5)}} </h3>\\n            <p matLine>\\n              <span> {{item.run.param.frequency}} </span>\\n              <span class=\\\"demo-2\\\"> -- {{item.run.param.threads}} </span>\\n            </p>\\n            <button mat-icon-button (click)=\\\"taskInfo(item.id)\\\">\\n              <mat-icon>info</mat-icon>\\n            </button>\\n        </mat-list-item>\\n      </mat-list>\\n    </mat-card-content>\\n  </mat-card>  <!-- end results -->\\n\\n  <mat-card class=\\\"focus\\\" *ngIf=focus>\\n    <!-- FOCUS task. select from lists -->\\n    <mat-card-actions>\\n      <button mat-icon-button (click)=\\\"clearFocus()\\\">\\n        <mat-icon>close</mat-icon>\\n      </button>\\n    </mat-card-actions>\\n    <mat-card-title color=\\\"primary\\\">ID: {{focus.id.substr(0, 5)}}</mat-card-title>\\n    <mat-tab-group>\\n      <mat-tab label=\\\"Result\\\">\\n        <mat-list role=\\\"list\\\">\\n          <mat-list-item role=\\\"listitem\\\">\\n            <mat-icon>gradient</mat-icon>\\n            <span>Method: </span>\\n            <span> {{focus.run.method}}</span>\\n          </mat-list-item>\\n          <mat-list-item role=\\\"listitem\\\">\\n            <mat-icon>whatshot</mat-icon>\\n            <span>Energy: </span>\\n            <span> {{focus.meta_data.result.energy}}</span>\\n          </mat-list-item>\\n          <mat-list-item role=\\\"listitem\\\">\\n            <mat-icon>memory</mat-icon>\\n            <span>Frequency: </span>\\n            <span> {{focus.meta_data.result.frequency}}</span>\\n          </mat-list-item>\\n          <mat-list-item role=\\\"listitem\\\">\\n            <mat-icon>layers</mat-icon>\\n            <span>Threads: </span>\\n            <span> {{focus.meta_data.result.threads}}</span>\\n          </mat-list-item>\\n          <mat-list-item role=\\\"listitem\\\">\\n            <mat-icon>timer</mat-icon>\\n            <span>Time: </span>\\n            <span> {{focus.meta_data.result.time}}</span>\\n          </mat-list-item>\\n        </mat-list>\\n      </mat-tab>\\n      <mat-tab label=\\\"Meta data\\\">\\n        <mat-list role=\\\"list\\\">\\n          <mat-list-item role=\\\"listitem\\\">\\n            <mat-icon>rowing</mat-icon>\\n            <span>Worker:</span>\\n            <span>{{focus.meta_data.appointment}}</span>\\n          </mat-list-item>\\n          <mat-list-item role=\\\"listitem\\\">\\n            <mat-icon>list</mat-icon>\\n            <span>Accept:</span>\\n            <span>{{focus.meta_data.accept}}</span>\\n          </mat-list-item>\\n          <mat-list-item role=\\\"listitem\\\">\\n            <mat-icon>directions</mat-icon>\\n            <span>Receive:</span>\\n            <span>{{focus.meta_data.receive}}</span>\\n          </mat-list-item>\\n        </mat-list>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </mat-card>\\n      <!-- end focus -->\\n\\n</div>\\n\"","module.exports = \".box {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  justify-content: space-around;\\n  align-items: flex-start; }\\n\\n.stack, .result {\\n  flex-grow: 2;\\n  min-width: 250px; }\\n\\n/* Selected item */\\n\\n.selected {\\n  font-weight: 700;\\n  border-left: 2px solidr rgba(255, 64, 129, 0.9);\\n  background: #00000014; }\\n\\n.selected .mat-list-icon {\\n  color: rgba(0, 0, 0, 0.9); }\\n\\nmat-tab-body mat-grid-tile {\\n  height: 100%; }\\n\\n/* Icons */\\n\\n.mat-list-icon {\\n  color: rgba(189, 189, 189, 0.5); }\\n\\n.mat-icon {\\n  color: rgba(189, 189, 189, 0.5); }\\n\\n.mat-icon + span {\\n  color: rgba(189, 189, 189, 0.5);\\n  font-size: .95em;\\n  vertical-align: middle;\\n  margin-right: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n// Service\nimport { RestService } from '../../core/services/rest.service';\nimport { WsSocketService } from '../../core/services/ws.socket.service';\nimport { Task } from '../../data/taskData.model';\nimport { Event } from '../../data/client-enums';\n// import { resolve } from 'path';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']  \n})\nexport class TaskListComponent implements OnInit {\n  \n  stack = []\n  result = [] \n  focus\n  ioConnection: any;\n\n  constructor(private ws: RestService, private io: WsSocketService) { }\n\n  ngOnInit() {\n    this.initIoConnection();\n  }\n\n  clearFocus():void {\n    this.focus = null\n  }\n\n  // --------------------- SOCKET ---------------\n  private initIoConnection(): void {\n    this.io.initSocket();\n\n    // Fresh updates. Each time +1 task\n    this.ioConnection = this.io.onResults()\n      .subscribe((obj: JSON) => {\n        var fresh: Task = new Task(obj)\n        !this.result.includes(fresh, -1) && this.result.push(fresh);\n        // console.log(' Object:', obj);\n      });\n    // Rewrite task stack\n    this.ioConnection = this.io.stack()\n      .subscribe((obj: Array<Object>) => {\n        this.stack = obj;\n        // console.log(' Stack:', obj);\n      });\n\n    // Observer for stack and all results from workers service\n    this.ioConnection = this.io.onAllResults()\n      .subscribe((obj: any) => {\n        console.log(\"onAllResults ::\", JSON.parse(obj))\n        var data = JSON.parse(obj)\n        this.result = (data.hasOwnProperty('res') && data['res'].length) ? data['res'].map((t) => new Task(t)) : [];\n        this.stack = (data.hasOwnProperty('stack') && data['stack'].length) ? data['stack'].map((t) => new Task(t)) : [];\n      });\n\n    this.io.onEvent(Event.CONNECT)\n      .subscribe(() => {\n        console.log(' task-list: connected');\n        // get init data\n        this.io.reqForAllRes();\n      });\n    this.io.onEvent(Event.DISCONNECT)\n      .subscribe(() => {\n        console.log(' task-list: disconnected');\n      });\n  }\n\n  // ____________________________ HTTP _____\n  taskInfo(id: string): any {\n     this.ws.getTaskById(id)\n      .subscribe((res) => {\n        this.focus = res[\"result\"];\n        this.focus.time = res[\"time\"]\n      }\n      );\n  }\n\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/* Shared Service */\nimport { RestService } from './services/rest.service';\nimport { WsSocketService } from './services/ws.socket.service';\nimport { MainSocketService } from './services/main.socket.service';\n\n@NgModule({\n  imports: [],\n  providers: [\n    { provide: RestService, useClass: RestService },\n    { provide: WsSocketService, useClass: WsSocketService },\n    { provide: MainSocketService, useClass: MainSocketService }\n  ],\n  declarations: []\n})\nexport class CoreModule {\n  /* make sure CoreModule is imported only by one NgModule the AppModule */\n  constructor(\n    @Optional() @SkipSelf() parentModule: CoreModule\n  ) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport * as socketIo from 'socket.io-client';\n\nimport { MainEvent } from '../../data/client-enums';\n\nimport { environment } from '../../../environments/environment';\nconst SERVER_URL = environment.mainNode;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MainSocketService {\n  private socket;\n\n  constructor() {\n    this.socket = socketIo(SERVER_URL);\n  }\n\n  public onEvent(event: MainEvent): Observable<any> {\n    return new Observable<object>(observer => {\n      this.socket.on(event, (data: object) => observer.next(data));\n    });\n  }\n  public onEmptyEvent(event: MainEvent): Observable<any> {\n    return new Observable<MainEvent>(observer => {\n      this.socket.on(event, () => observer.next());\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n// User\nimport { Task } from '../../data/taskData.model';\n\nimport { environment } from '../../../environments/environment';\nconst SERVICE_URL = environment.workerService;\nconst MAIN_URL = environment.mainNode;\n\n@Injectable()\nexport class RestService {\n\n  tasks: Task[] = [];\n\n  constructor(private http: Http) {\n  }\n  private handleError(error: Response | any) {\n    console.error('Handle Error:', error);\n    return Observable.throw(error);\n  }\n  // ---------------------------------\n  //                    Worker Service\n\n  // GET /stack /* Observable<Task[]> */\n  public getStack(): any {\n    return this.http\n      .get(SERVICE_URL + '/stack')\n      .map(response => {\n        const tasks = response.json();\n        return tasks/*.map((t) => new Task(t))*/;\n      })\n      .catch(this.handleError);\n  }\n\n  // GET /result/:id\n  getTaskById(id: string): any {\n    return this.http\n      .get(SERVICE_URL + '/result/'+ id)\n      .map(response => {\n        const task = response.json();\n        return task/*.map((t) => new Task)/*/;\n      })\n      .catch(this.handleError);\n  }\n\n  // GET all result\n  getAllResult(): any {\n    return this.http\n      .get(SERVICE_URL + '/result/all')\n      .map(response => {\n        const res = response.json();\n        return res/*.map((t) => new Task)/*/;\n      })\n      .catch(this.handleError);\n  }\n// -----------------------------\n//                    Main-node\n  startMain(): any {\n    return this.http\n      .get(MAIN_URL + '/main_start')\n      .map(response => {\n        const res = response.json();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n  getMainStatus(): any {\n    return this.http\n      .get(MAIN_URL + '/status')\n      .map(response => {\n        const res = response.json();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n  stopMain(): any {\n    return this.http\n      .get(MAIN_URL + '/main_stop')\n      .map(response => {\n        const res = response.json();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n// import { Observer } from 'rxjs/Observer';\n\nimport * as socketIo from 'socket.io-client';\n\n// User\nimport { Task } from '../../data/taskData.model';\nimport { Event } from '../../data/client-enums';\n\n// Variables\nimport { environment } from '../../../environments/environment';\nconst SERVER_URL = environment.workerService;\nconst NAME_SPACE = environment.nameSpace;\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WsSocketService {\n  private socket;\n  constructor() { }\n\n  public initSocket(): void {\n    this.socket = socketIo(SERVER_URL + NAME_SPACE);\n    this.socket.emit('join', {'room': NAME_SPACE});\n  }\n\n  public reqForAllRes(): void {\n    this.socket.emit('all result');\n  }\n\n  public onResults(): Observable<JSON> {\n    return new Observable<JSON>(observer => {\n      this.socket.on('result', (data: JSON) => observer.next(data));\n    });\n  }\n\n  public stack(): Observable<Array<Object>> {\n    return new Observable<Array<Object>>(observer => {\n      this.socket.on('stack', (data: Array<Object>) => observer.next(data));\n    });\n  }\n\n  public onAllResults(): Observable<object> {\n    return new Observable<object>(observer => {\n      this.socket.on('all result', (data: object) => observer.next(data));\n    });\n  }\n\n  public onEvent(event: Event): Observable<any> {\n    return new Observable<Event>(observer => {\n      this.socket.on(event, () => observer.next());\n    });\n  }\n\n}\n","// Socket.io events\nexport enum Event {\n    CONNECT = 'connect',\n    DISCONNECT = 'disconnect'\n}\n\nexport enum MainEvent {\n    CONNECT = 'connect',\n    DISCONNECT = 'disconnect',\n    BEST = 'best point',\n    DEFAULT_CONF = 'default conf',\n    MAIN_CONF = 'main_config',\n    REGRESION = 'regression',\n    TASK_RESULT = 'task result',\n    INFO = 'info'\n}\n\nexport const Color = ['Portland', 'Greens', 'Greys', 'YIGnBu',\n    'RdBu', 'Jet', 'Hot', 'Picnic', 'Electric',\n    'Bluered', 'YIOrRd', 'Blackbody', 'Earth']\n\nexport const PlotType = [\n    'heatmap', 'contour', 'surface'\n]\n\nexport const Smooth = [\n    false, \"fast\", \"best\"\n]\n\n\n","export class Task {\n    id: string = '';\n    run: object = {};\n    conf: object = {};\n    meta: object = {};\n    constructor(item) {\n        this.id = item.id;\n        this.run = item.run;\n        this.conf = item.config;\n        this.meta = item.meta_data;\n    }\n\n    clear() {\n        this.id = '';\n        this.run = {};\n        this.conf = {};\n        this.meta = {};\n    }\n}\n\nexport interface Solution {\n    configuration: any;\n    result: any;\n    'measured points': Array<Number>\n} \n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n// Animation\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// Material\nimport {\n  MatButtonModule,\n  MatCheckboxModule,\n  MatCardModule,\n  MatListModule,\n  MatIconModule,\n  MatTabsModule,\n  MatTooltipModule,\n  MatGridListModule,\n  MatProgressBarModule,\n  MatSelectModule,\n  MatSnackBarModule,\n  MatExpansionModule,\n  MatBadgeModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatGridListModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatExpansionModule,\n    MatBadgeModule\n  ],\n  declarations: [],\n  exports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatGridListModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatExpansionModule]\n})\nexport class SharedModule { }\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  workerService: 'http://0.0.0.0:80',\n  mainNode: 'http://0.0.0.0:9000',\n  nameSpace: '/front-end'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// Material\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}